{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nihaal\\\\Documents\\\\JS\\\\React\\\\demo\\\\food-order\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nfunction CartProvider(props) {\n  _s();\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCartState);\n  function addItemHandler(item) {\n    dispatchAction({\n      type: \"ADD\",\n      item: item\n    });\n  }\n  function removeItemHandler(id) {\n    dispatchAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  }\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"3lcwG2olG1OvNJv9IAKD1JT0EQY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/Nihaal/Documents/JS/React/demo/food-order/src/store/CartProvider.js"],"sourcesContent":["import{useReducer} from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\n\r\nconst defaultCartState={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer = (state,action) => {\r\n    if(action.type === \"ADD\")\r\n    {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingItemIndex = state.items.findIndex(item=>item.id === action.item.id)\r\n        const existingCartItem = state.items[existingItemIndex]\r\n        \r\n        let updatedItems;\r\n        if(existingCartItem)\r\n        {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items]\r\n            updatedItems[existingItemIndex] = updatedItem;\r\n        }\r\n        else\r\n        {\r\n            updatedItems = state.items.concat(action.item)\r\n        }\r\n\r\n        \r\n        \r\n        \r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState\r\n}\r\n\r\nfunction CartProvider(props)\r\n{\r\n    const [cartState,dispatchAction] = useReducer(cartReducer,defaultCartState);\r\n    function addItemHandler(item)\r\n    {\r\n        dispatchAction({type:\"ADD\",item:item})\r\n    }\r\n\r\n    function removeItemHandler(id)\r\n    {\r\n        dispatchAction({type:\"REMOVE\",id:id})\r\n    }\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA,SAAOA,UAAU,QAAO,OAAO;AAC/B,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAGzC,MAAMC,gBAAgB,GAAC;EACnBC,KAAK,EAAC,EAAE;EACRC,WAAW,EAAC;AAChB,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAACC,MAAM,KAAK;EAClC,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EACxB;IACI,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IACrF,MAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAEA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC;IACjF,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAK,CAACU,iBAAiB,CAAC;IAEvD,IAAII,YAAY;IAChB,IAAGD,gBAAgB,EACnB;MACI,MAAME,WAAW,GAAG;QAChB,GAAGF,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAClD,CAAC;MACDK,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC/Bc,YAAY,CAACJ,iBAAiB,CAAC,GAAGK,WAAW;IACjD,CAAC,MAED;MACID,YAAY,GAAGX,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACZ,MAAM,CAACG,IAAI,CAAC;IAClD;IAKA,OAAM;MACFP,KAAK,EAACc,YAAY;MAClBb,WAAW,EAACK;IAChB,CAAC;EACL;EACA,OAAOP,gBAAgB;AAC3B,CAAC;AAED,SAASkB,YAAY,CAACC,KAAK,EAC3B;EAAA;EACI,MAAM,CAACC,SAAS,EAACC,cAAc,CAAC,GAAGvB,UAAU,CAACK,WAAW,EAACH,gBAAgB,CAAC;EAC3E,SAASsB,cAAc,CAACd,IAAI,EAC5B;IACIa,cAAc,CAAC;MAACf,IAAI,EAAC,KAAK;MAACE,IAAI,EAACA;IAAI,CAAC,CAAC;EAC1C;EAEA,SAASe,iBAAiB,CAACV,EAAE,EAC7B;IACIQ,cAAc,CAAC;MAACf,IAAI,EAAC,QAAQ;MAACO,EAAE,EAACA;IAAE,CAAC,CAAC;EACzC;EAEA,MAAMW,WAAW,GAAG;IAChBvB,KAAK,EAACmB,SAAS,CAACnB,KAAK;IACrBC,WAAW,EAACkB,SAAS,CAAClB,WAAW;IACjCuB,OAAO,EAAEH,cAAc;IACvBI,UAAU,EAAEH;EAChB,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACpCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAE/B;AAAC,GAzBQT,YAAY;AAAA,KAAZA,YAAY;AA2BrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}